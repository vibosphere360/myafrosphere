// === ANALYTICS ===
function trackEvent(category, action, label) {
    console.log(`📊 ${category} - ${action} - ${label}`);
}

function trackPerformance() {
    if (performance) {
        window.addEventListener('load', () => {
            const perfData = performance.getEntriesByType('navigation')[0];
            trackEvent('Performance', 'Page Load', 'Homepage', Math.round(perfData.loadEventEnd - perfData.fetchStart));
        });
    }
}

// === MODAL FUNCTIONS ===
function openModal(modalId) {
    const modal = document.getElementById(modalId);
    if (modal) {
        modal.style.display = 'flex';
        modal.setAttribute('aria-hidden', 'false');
        document.body.style.overflow = 'hidden';
        const firstFocusable = modal.querySelector('button, [href], input, [tabindex="0"]');
        if (firstFocusable) firstFocusable.focus();
        trackEvent('Modal', 'Open', modalId);
    }
}

function closeModal(modalId) {
    const modal = document.getElementById(modalId);
    if (modal) {
        modal.style.display = 'none';
        modal.setAttribute('aria-hidden', 'true');
        document.body.style.overflow = 'auto';
        trackEvent('Modal', 'Close', modalId);
    }
}

// Close on click outside
document.addEventListener('click', e => {
    if (e.target.classList.contains('modal')) {
        closeModal(e.target.id);
    }
});

// Close with Escape key
document.addEventListener('keydown', e => {
    if (e.key === 'Escape') {
        document.querySelectorAll('.modal').forEach(modal => {
            if (modal.style.display === 'flex') closeModal(modal.id);
        });
    }
});

// === FORM VALIDATION ===
function showError(inputId, errorId, message) {
    const input = document.getElementById(inputId);
    const error = document.getElementById(errorId);
    input.setAttribute('aria-invalid', 'true');
    error.textContent = message;
    error.style.display = 'block';
    return false;
}

function clearErrors(formId) {
    const form = document.getElementById(formId);
    form.querySelectorAll('.error-message').forEach(error => error.style.display = 'none');
    form.querySelectorAll('.form-input').forEach(input => input.setAttribute('aria-invalid', 'false'));
}

function validateEmail(email) {
    return /^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(email);
}

function signIn() {
    clearErrors('signinForm');
    const email = document.getElementById('signinEmail').value;
    const password = document.getElementById('signinPassword').value;
    let isValid = true;
    if (!email) {
        isValid = showError('signinEmail', 'signinEmailError', 'Please enter a valid email.');
    } else if (!validateEmail(email)) {
        isValid = showError('signinEmail', 'signinEmailError', 'Invalid email format.');
    }
    if (!password) {
        isValid = showError('signinPassword', 'signinPasswordError', 'Please enter your password.');
    }
    if (isValid) {
        alert('✅ Signed in! (Demo mode)');
        trackEvent('Auth', 'Success', 'Sign In');
        closeModal('signinModal');
    }
}

function signUp() {
    clearErrors('signupForm');
    const firstName = document.getElementById('firstName').value;
    const lastName = document.getElementById('lastName').value;
    const email = document.getElementById('signupEmail').value;
    const password = document.getElementById('signupPassword').value;
    let isValid = true;
    if (!firstName) {
        isValid = showError('firstName', 'firstNameError', 'Please enter your first name.');
    }
    if (!lastName) {
        isValid = showError('lastName', 'lastNameError', 'Please enter your last name.');
    }
    if (!email) {
        isValid = showError('signupEmail', 'signupEmailError', 'Please enter a valid email.');
    } else if (!validateEmail(email)) {
        isValid = showError('signupEmail', 'signupEmailError', 'Invalid email format.');
    }
    if (!password) {
        isValid = showError('signupPassword', 'signupPasswordError', 'Please enter a password.');
    } else if (password.length < 8) {
        isValid = showError('signupPassword', 'signupPasswordError', 'Password must be at least 8 characters.');
    }
    if (isValid) {
        alert(`✅ Account created, ${firstName}! (Demo mode)`);
        trackEvent('Auth', 'Success', 'Sign Up');
        closeModal('signupModal');
    }
}

function signInWithGoogle() {
    alert('Google sign-in would redirect to Google for authentication. This is a demo.');
    trackEvent('Auth', 'Initiate', 'Google');
}

function resetPassword() {
    clearErrors('forgotPasswordForm');
    const email = document.getElementById('forgotPasswordEmail').value;
    if (!email) {
        showError('forgotPasswordEmail', 'forgotPasswordEmailError', 'Please enter a valid email.');
        return;
    } else if (!validateEmail(email)) {
        showError('forgotPasswordEmail', 'forgotPasswordEmailError', 'Invalid email format.');
        return;
    }
    alert(`✅ Password reset link sent to ${email}`);
    trackEvent('Auth', 'Password Reset', email);
    closeModal('forgotPasswordModal');
}

// === AFRICAN COUNTRIES CAROUSEL ===
const africanCountries = [
    { name: 'Nigeria', code: 'NG', emoji: '🇳🇬', region: 'West Africa' },
    { name: 'Ghana', code: 'GH', emoji: '🇬🇭', region: 'West Africa' },
    { name: 'Kenya', code: 'KE', emoji: '🇰🇪', region: 'East Africa' },
    { name: 'South Africa', code: 'ZA', emoji: '🇿🇦', region: 'Southern Africa' },
    { name: 'Egypt', code: 'EG', emoji: '🇪🇬', region: 'North Africa' },
    { name: 'Morocco', code: 'MA', emoji: '🇲🇦', region: 'North Africa' },
    { name: 'Ethiopia', code: 'ET', emoji: '🇪🇹', region: 'East Africa' },
    { name: 'Tanzania', code: 'TZ', emoji: '🇹🇿', region: 'East Africa' },
    { name: 'Uganda', code: 'UG', emoji: '🇺🇬', region: 'East Africa' },
    { name: "Côte d'Ivoire", code: 'CI', emoji: '🇨🇮', region: 'West Africa' },
    { name: 'Senegal', code: 'SN', emoji: '🇸🇳', region: 'West Africa' },
    { name: 'Algeria', code: 'DZ', emoji: '🇩🇿', region: 'North Africa' },
    { name: 'Zambia', code: 'ZM', emoji: '🇿🇲', region: 'Southern Africa' },
    { name: 'Zimbabwe', code: 'ZW', emoji: '🇿🇼', region: 'Southern Africa' },
    { name: 'Cameroon', code: 'CM', emoji: '🇨🇲', region: 'Central Africa' },
    { name: 'Tunisia', code: 'TN', emoji: '🇹🇳', region: 'North Africa' },
    { name: 'Angola', code: 'AO', emoji: '🇦🇴', region: 'Southern Africa' },
    { name: 'Mozambique', code: 'MZ', emoji: '🇲🇿', region: 'Southern Africa' },
    { name: 'Niger', code: 'NE', emoji: '🇳🇪', region: 'West Africa' },
    { name: 'Malawi', code: 'MW', emoji: '🇲🇼', region: 'Southern Africa' },
    { name: 'Burkina Faso', code: 'BF', emoji: '🇧🇫', region: 'West Africa' },
    { name: 'Mali', code: 'ML', emoji: '🇲🇱', region: 'West Africa' },
    { name: 'Chad', code: 'TD', emoji: '🇹🇩', region: 'Central Africa' },
    { name: 'Somalia', code: 'SO', emoji: '🇸🇴', region: 'East Africa' },
    { name: 'Guinea', code: 'GN', emoji: '🇬🇳', region: 'West Africa' },
    { name: 'Benin', code: 'BJ', emoji: '🇧🇯', region: 'West Africa' },
    { name: 'Rwanda', code: 'RW', emoji: '🇷🇼', region: 'East Africa' },
    { name: 'Burundi', code: 'BI', emoji: '🇧🇮', region: 'East Africa' },
    { name: 'Togo', code: 'TG', emoji: '🇹🇬', region: 'West Africa' },
    { name: 'Sudan', code: 'SD', emoji: '🇸🇩', region: 'North Africa' },
    { name: 'Libya', code: 'LY', emoji: '🇱🇾', region: 'North Africa' },
    { name: 'Congo', code: 'CG', emoji: '🇨🇬', region: 'Central Africa' },
    { name: 'Central African Republic', code: 'CF', emoji: '🇨🇫', region: 'Central Africa' },
    { name: 'Sierra Leone', code: 'SL', emoji: '🇸🇱', region: 'West Africa' },
    { name: 'Liberia', code: 'LR', emoji: '🇱🇷', region: 'West Africa' },
    { name: 'Mauritania', code: 'MR', emoji: '🇲🇷', region: 'West Africa' },
    { name: 'Eritrea', code: 'ER', emoji: '🇪🇷', region: 'East Africa' },
    { name: 'Namibia', code: 'NA', emoji: '🇳🇦', region: 'Southern Africa' },
    { name: 'Botswana', code: 'BW', emoji: '🇧🇼', region: 'Southern Africa' },
    { name: 'Gabon', code: 'GA', emoji: '🇬🇦', region: 'Central Africa' },
    { name: 'Guinea-Bissau', code: 'GW', emoji: '🇬🇼', region: 'West Africa' },
    { name: 'Lesotho', code: 'LS', emoji: '🇱🇸', region: 'Southern Africa' },
    { name: 'Equatorial Guinea', code: 'GQ', emoji: '🇬🇶', region: 'Central Africa' },
    { name: 'Mauritius', code: 'MU', emoji: '🇲🇺', region: 'Southern Africa' },
    { name: 'Eswatini', code: 'SZ', emoji: '🇸🇿', region: 'Southern Africa' },
    { name: 'Djibouti', code: 'DJ', emoji: '🇩🇯', region: 'East Africa' },
    { name: 'Comoros', code: 'KM', emoji: '🇰🇲', region: 'East Africa' },
    { name: 'Cape Verde', code: 'CV', emoji: '🇨🇻', region: 'West Africa' },
    { name: 'São Tomé and Príncipe', code: 'ST', emoji: '🇸🇹', region: 'Central Africa' },
    { name: 'Seychelles', code: 'SC', emoji: '🇸🇨', region: 'East Africa' }
];

function createCarouselItem(country) {
    return `
        <div class="carousel-item" role="listitem" tabindex="0"
            aria-label="${country.name} flag - ${country.region}"
            onclick="captureEmail('${country.name}')"
            onkeydown="if(event.key==='Enter') captureEmail('${country.name}')">
            <div class="country-flag">${country.emoji}</div>
            <div class="country-name">${country.name}</div>
        </div>
    `;
}

function initializeCarousel() {
    const track = document.getElementById('carouselTrack');
    const itemsHTML = africanCountries.map(createCarouselItem).join('');
    track.innerHTML = itemsHTML + itemsHTML; // Duplicate for seamless loop
}

// === UBER-STYLE JOIN FLOW ===
function captureEmail(country) {
    const email = prompt(`Welcome to c/${country}! What’s your email so we can notify you at launch?`);
    if (email && validateEmail(email)) {
        alert(`✅ Got it! You’re on the list for c/${country}. We’ll email you soon.`);
        trackEvent('Waitlist', 'Join', country, email);
        sharePrompt();
    } else if (email) {
        alert('❌ Please enter a valid email.');
    }
}

// === TIKTOK-STYLE SHARE PROMPT ===
function sharePrompt() {
    const share = confirm("You're in! Want to share your African pride with friends?");
    if (share) {
        shareToWhatsApp();
    }
}

function shareToWhatsApp() {
    const text = "I just joined c/Nigeria on @MyAfroSphere. Where’s your community? 👉 https://myafrosphere.pages.dev";
    window.open(`https://wa.me/?text=${encodeURIComponent(text)}`, '_blank');
    trackEvent('Share', 'WhatsApp', 'Community');
}

function shareToX() {
    const text = "I just joined c/Nigeria on @MyAfroSphere. Where’s your community? 👉 https://myafrosphere.pages.dev";
    window.open(`https://twitter.com/intent/tweet?text=${encodeURIComponent(text)}`, '_blank');
    trackEvent('Share', 'X', 'Community');
}

// === INITIALIZATION ===
document.addEventListener('DOMContentLoaded', () => {
    initializeCarousel();
    trackPerformance();
    trackEvent('Page', 'Load', 'Homepage');

    // Modal event listeners
    document.querySelectorAll('.close').forEach(btn => {
        btn.addEventListener('click', e => {
            const modal = e.target.closest('.modal');
            if (modal) closeModal(modal.id);
        });
    });

    document.getElementById('forgotPasswordLink')?.addEventListener('click', e => {
        e.preventDefault();
        openModal('forgotPasswordModal');
        closeModal('signinModal');
    });
    document.getElementById('signupFromSignin')?.addEventListener('click', e => {
        e.preventDefault();
        closeModal('signinModal');
        openModal('signupModal');
    });
    document.getElementById('signinFromSignup')?.addEventListener('click', e => {
        e.preventDefault();
        closeModal('signupModal');
        openModal('signinModal');
    });
    document.getElementById('backToSignin')?.addEventListener('click', e => {
        e.preventDefault();
        closeModal('forgotPasswordModal');
        openModal('signinModal');
    });
    document.querySelector('#signinForm .btn-primary')?.addEventListener('click', signIn);
    document.querySelector('#signupForm .btn-primary')?.addEventListener('click', signUp);
    document.querySelector('#forgotPasswordForm .btn-primary')?.addEventListener('click', resetPassword);
});