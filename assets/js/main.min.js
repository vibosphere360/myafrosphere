function trackEvent(category, action, label, value) {
    console.log(`📊 Analytics: ${category} - ${action} - ${label}${value ? ` - ${value}` : ''}`);
}

function trackPerformance() {
    if (performance) {
        window.addEventListener('load', () => {
            const perfData = performance.getEntriesByType('navigation')[0];
            trackEvent('Performance', 'Page Load', 'Homepage', Math.round(perfData.loadEventEnd - perfData.fetchStart));
        });
    }
}

function openModal(modalId) {
    const modal = document.getElementById(modalId);
    if (modal) {
        modal.style.display = 'flex';
        document.body.style.overflow = 'hidden';
        const focusableElements = modal.querySelectorAll('button, [href], input, select, textarea, [tabindex]:not([tabindex="-1"])');
        const firstElement = focusableElements[0];
        const lastElement = focusableElements[focusableElements.length - 1];
        firstElement.focus();
        modal.addEventListener('keydown', e => {
            if (e.key === 'Tab') {
                if (e.shiftKey && document.activeElement === firstElement) {
                    e.preventDefault();
                    lastElement.focus();
                } else if (!e.shiftKey && document.activeElement === lastElement) {
                    e.preventDefault();
                    firstElement.focus();
                }
            }
        });
        trackEvent('Modal', 'Open', modalId);
    }
}

function closeModal(modalId) {
    const modal = document.getElementById(modalId);
    if (modal) {
        modal.style.display = 'none';
        document.body.style.overflow = 'auto';
        trackEvent('Modal', 'Close', modalId);
    }
}

document.addEventListener('click', e => {
    if (e.target.classList.contains('modal')) {
        e.target.style.display = 'none';
        document.body.style.overflow = 'auto';
        trackEvent('Modal', 'Close', 'Click Outside');
    }
});

document.addEventListener('keydown', e => {
    if (e.key === 'Escape') {
        document.querySelectorAll('.modal').forEach(modal => {
            if (modal.style.display === 'flex') closeModal(modal.id);
        });
    }
});

function showError(inputId, errorId, message) {
    const input = document.getElementById(inputId);
    const error = document.getElementById(errorId);
    input.setAttribute('aria-invalid', 'true');
    error.textContent = message;
    error.style.display = 'block';
    return false;
}

function clearErrors(formId) {
    const form = document.getElementById(formId);
    form.querySelectorAll('.error-message').forEach(error => error.style.display = 'none');
    form.querySelectorAll('.form-input').forEach(input => input.setAttribute('aria-invalid', 'false'));
}

function validateEmail(email) {
    return /^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(email);
}

function signIn() {
    clearErrors('signinForm');
    const email = document.getElementById('signinEmail').value;
    const password = document.getElementById('signinPassword').value;
    let isValid = true;
    if (!email) {
        isValid = showError('signinEmail', 'signinEmailError', 'Please enter a valid email.');
    } else if (!validateEmail(email)) {
        isValid = showError('signinEmail', 'signinEmailError', 'Invalid email format.');
    }
    if (!password) {
        isValid = showError('signinPassword', 'signinPasswordError', 'Please enter your password.');
    }
    if (isValid) {
        alert('✅ Signed in! (Demo mode)');
        trackEvent('Auth', 'Success', 'Sign In');
        closeModal('signinModal');
    }
}

function signUp() {
    clearErrors('signupForm');
    const firstName = document.getElementById('firstName').value;
    const lastName = document.getElementById('lastName').value;
    const email = document.getElementById('signupEmail').value;
    const password = document.getElementById('signupPassword').value;
    let isValid = true;
    if (!firstName) {
        isValid = showError('firstName', 'firstNameError', 'Please enter your first name.');
    }
    if (!lastName) {
        isValid = showError('lastName', 'lastNameError', 'Please enter your last name.');
    }
    if (!email) {
        isValid = showError('signupEmail', 'signupEmailError', 'Please enter a valid email.');
    } else if (!validateEmail(email)) {
        isValid = showError('signupEmail', 'signupEmailError', 'Invalid email format.');
    }
    if (!password) {
        isValid = showError('signupPassword', 'signupPasswordError', 'Please enter a password.');
    } else if (password.length < 8) {
        isValid = showError('signupPassword', 'signupPasswordError', 'Password must be at least 8 characters.');
    }
    if (isValid) {
        alert(`✅ Account created, ${firstName}! (Demo mode)`);
        trackEvent('Auth', 'Success', 'Sign Up');
        closeModal('signupModal');
    }
}

function signInWithGoogle() {
    alert('Google sign-in would redirect to Google for authentication. This is a demo.');
    trackEvent('Auth', 'Initiate', 'Google');
}

function resetPassword() {
    clearErrors('forgotPasswordForm');
    const email = document.getElementById('forgotPasswordEmail').value;
    if (!email) {
        showError('forgotPasswordEmail', 'forgotPasswordEmailError', 'Please enter a valid email.');
        return;
    } else if (!validateEmail(email)) {
        showError('forgotPasswordEmail', 'forgotPasswordEmailError', 'Invalid email format.');
        return;
    }
    alert(`✅ Password reset link sent to ${email}`);
    trackEvent('Auth', 'Password Reset', email);
    closeModal('forgotPasswordModal');
}

const africanCountries = [
    { name: 'Nigeria', code: 'NG', emoji: '🇳🇬', region: 'West Africa', lat: 9.0820, lng: 8.6753 },
    { name: 'Ghana', code: 'GH', emoji: '🇬🇭', region: 'West Africa', lat: 7.9465, lng: -1.0232 },
    { name: 'Kenya', code: 'KE', emoji: '🇰🇪', region: 'East Africa', lat: 1.2921, lng: 36.8219 },
    { name: 'South Africa', code: 'ZA', emoji: '🇿🇦', region: 'Southern Africa', lat: -30.5595, lng: 22.9375 },
    { name: 'Egypt', code: 'EG', emoji: '🇪🇬', region: 'North Africa', lat: 26.8206, lng: 30.8025 },
    { name: 'Morocco', code: 'MA', emoji: '🇲🇦', region: 'North Africa', lat: 31.7917, lng: -7.0926 },
    { name: 'Ethiopia', code: 'ET', emoji: '🇪🇹', region: 'East Africa', lat: 9.1450, lng: 40.4897 },
    { name: 'Tanzania', code: 'TZ', emoji: '🇹🇿', region: 'East Africa', lat: -6.3690, lng: 34.8888 },
    { name: 'Uganda', code: 'UG', emoji: '🇺🇬', region: 'East Africa', lat: 1.3733, lng: 32.2903 },
    { name: "Côte d'Ivoire", code: 'CI', emoji: '🇨🇮', region: 'West Africa', lat: 7.5400, lng: -5.5471 },
    { name: 'Senegal', code: 'SN', emoji: '🇸🇳', region: 'West Africa', lat: 14.4974, lng: -14.4524 },
    { name: 'Algeria', code: 'DZ', emoji: '🇩🇿', region: 'North Africa', lat: 28.0339, lng: 1.6596 },
    { name: 'Zambia', code: 'ZM', emoji: '🇿🇲', region: 'Southern Africa', lat: -13.1339, lng: 27.4116 },
    { name: 'Zimbabwe', code: 'ZW', emoji: '🇿🇼', region: 'Southern Africa', lat: -19.0154, lng: 29.1549 },
    { name: 'Cameroon', code: 'CM', emoji: '🇨🇲', region: 'Central Africa', lat: 7.3697, lng: 12.3547 },
    { name: 'Tunisia', code: 'TN', emoji: '🇹🇳', region: 'North Africa', lat: 33.8869, lng: 9.5375 },
    { name: 'Angola', code: 'AO', emoji: '🇦🇴', region: 'Southern Africa', lat: -11.2027, lng: 17.8739 },
    { name: 'Mozambique', code: 'MZ', emoji: '🇲🇿', region: 'Southern Africa', lat: -18.6657, lng: 35.5296 },
    { name: 'Niger', code: 'NE', emoji: '🇳🇪', region: 'West Africa', lat: 17.6078, lng: 8.0817 },
    { name: 'Malawi', code: 'MW', emoji: '🇲🇼', region: 'Southern Africa', lat: -13.2543, lng: 34.3015 },
    { name: 'Burkina Faso', code: 'BF', emoji: '🇧🇫', region: 'West Africa', lat: 12.2383, lng: -1.5616 },
    { name: 'Mali', code: 'ML', emoji: '🇲🇱', region: 'West Africa', lat: 17.5707, lng: -3.9962 },
    { name: 'Chad', code: 'TD', emoji: '🇹🇩', region: 'Central Africa', lat: 15.4542, lng: 18.7322 },
    { name: 'Somalia', code: 'SO', emoji: '🇸🇴', region: 'East Africa', lat: 5.1521, lng: 46.1996 },
    { name: 'Guinea', code: 'GN', emoji: '🇬🇳', region: 'West Africa', lat: 9.9456, lng: -9.6966 },
    { name: 'Benin', code: 'BJ', emoji: '🇧🇯', region: 'West Africa', lat: 9.3077, lng: 2.3158 },
    { name: 'Rwanda', code: 'RW', emoji: '🇷🇼', region: 'East Africa', lat: -1.9403, lng: 29.8739 },
    { name: 'Burundi', code: 'BI', emoji: '🇧🇮', region: 'East Africa', lat: -3.3731, lng: 29.9189 },
    { name: 'Togo', code: 'TG', emoji: '🇹🇬', region: 'West Africa', lat: 8.6195, lng: 0.8248 },
    { name: 'Sudan', code: 'SD', emoji: '🇸🇩', region: 'North Africa', lat: 12.8628, lng: 30.2176 },
    { name: 'Libya', code: 'LY', emoji: '🇱🇾', region: 'North Africa', lat: 26.3351, lng: 17.2283 },
    { name: 'Congo', code: 'CG', emoji: '🇨🇬', region: 'Central Africa', lat: -0.2280, lng: 15.8277 },
    { name: 'Central African Republic', code: 'CF', emoji: '🇨🇫', region: 'Central Africa', lat: 6.6111, lng: 20.9394 },
    { name: 'Sierra Leone', code: 'SL', emoji: '🇸🇱', region: 'West Africa', lat: 8.4606, lng: -11.7762 },
    { name: 'Liberia', code: 'LR', emoji: '🇱🇷', region: 'West Africa', lat: 6.4281, lng: -9.4295 },
    { name: 'Mauritania', code: 'MR', emoji: '🇲🇷', region: 'West Africa', lat: 21.0079, lng: -10.9408 },
    { name: 'Eritrea', code: 'ER', emoji: '🇪🇷', region: 'East Africa', lat: 15.1794, lng: 39.7823 },
    { name: 'Namibia', code: 'NA', emoji: '🇳🇦', region: 'Southern Africa', lat: -22.9576, lng: 18.4904 },
    { name: 'Botswana', code: 'BW', emoji: '🇧🇼', region: 'Southern Africa', lat: -22.3285, lng: 24.6849 },
    { name: 'Gabon', code: 'GA', emoji: '🇬🇦', region: 'Central Africa', lat: -0.8037, lng: 11.6094 },
    { name: 'Guinea-Bissau', code: 'GW', emoji: '🇬🇼', region: 'West Africa', lat: 11.8037, lng: -15.1804 },
    { name: 'Lesotho', code: 'LS', emoji: '🇱🇸', region: 'Southern Africa', lat: -29.6099, lng: 28.2336 },
    { name: 'Equatorial Guinea', code: 'GQ', emoji: '🇬🇶', region: 'Central Africa', lat: 1.6508, lng: 10.2679 },
    { name: 'Mauritius', code: 'MU', emoji: '🇲🇺', region: 'Southern Africa', lat: -20.3484, lng: 57.5522 },
    { name: 'Eswatini', code: 'SZ', emoji: '🇸🇿', region: 'Southern Africa', lat: -26.5225, lng: 31.4659 },
    { name: 'Djibouti', code: 'DJ', emoji: '🇩🇯', region: 'East Africa', lat: 11.8251, lng: 42.5903 },
    { name: 'Comoros', code: 'KM', emoji: '🇰🇲', region: 'East Africa', lat: -11.8750, lng: 43.8722 },
    { name: 'Cape Verde', code: 'CV', emoji: '🇨🇻', region: 'West Africa', lat: 16.0021, lng: -24.0132 },
    { name: 'São Tomé and Príncipe', code: 'ST', emoji: '🇸🇹', region: 'Central Africa', lat: 0.1864, lng: 6.6131 },
    { name: 'Seychelles', code: 'SC', emoji: '🇸🇨', region: 'East Africa', lat: -4.6796, lng: 55.4920 }
];

function createCarouselItem(country) {
    return `<div class="carousel-item" role="listitem" tabindex="0" aria-label="${country.name} flag - ${country.region}" data-country="${country.name}" data-code="${country.code}" data-emoji="${country.emoji}" data-region="${country.region}">
                <div class="country-flag">${country.emoji}</div>
                <div class="country-name">${country.name}</div>
            </div>`;
}

function initializeCarousel() {
    const track = document.getElementById('carouselTrack');
    const searchInput = document.getElementById('countrySearch');
    let animationFrameId;
    let scrollAmount = 0;
    const itemWidth = 120;
    const scrollSpeed = 0.5;
    let isPaused = false;

    function updateCarousel(countries) {
        track.innerHTML = countries.map(createCarouselItem).join('');
    }

    function startCarousel() {
        if (!isPaused) {
            scrollAmount -= scrollSpeed;
            if (Math.abs(scrollAmount) >= itemWidth * africanCountries.length) {
                scrollAmount = 0;
            }
            track.style.transform = `translateX(${scrollAmount}px)`;
            animationFrameId = requestAnimationFrame(startCarousel);
        }
    }

    updateCarousel(africanCountries);
    startCarousel();

    track.addEventListener('mouseenter', () => {
        isPaused = true;
        cancelAnimationFrame(animationFrameId);
    });

    track.addEventListener('mouseleave', () => {
        isPaused = false;
        startCarousel();
    });

    track.addEventListener('touchstart', () => {
        isPaused = true;
        cancelAnimationFrame(animationFrameId);
    });

    track.addEventListener('touchend', () => {
        isPaused = false;
        startCarousel();
    });

    document.querySelector('.carousel-control.prev').addEventListener('click', () => {
        scrollAmount += itemWidth * 5;
        if (scrollAmount > 0) scrollAmount = -itemWidth * (africanCountries.length - 5);
        track.style.transition = 'transform 0.5s ease';
        track.style.transform = `translateX(${scrollAmount}px)`;
        trackEvent('Carousel', 'Navigate', 'Previous');
    });

    document.querySelector('.carousel-control.next').addEventListener('click', () => {
        scrollAmount -= itemWidth * 5;
        if (Math.abs(scrollAmount) > itemWidth * africanCountries.length) {
            scrollAmount = 0;
        }
        track.style.transition = 'transform 0.5s ease';
        track.style.transform = `translateX(${scrollAmount}px)`;
        trackEvent('Carousel', 'Navigate', 'Next');
    });

    document.querySelector('.carousel-control.pause').addEventListener('click', () => {
        isPaused = !isPaused;
        document.querySelector('.carousel-control.pause').textContent = isPaused ? '▶' : '⏸';
        if (!isPaused) startCarousel();
        else cancelAnimationFrame(animationFrameId);
        trackEvent('Carousel', isPaused ? 'Pause' : 'Play', 'Toggle');
    });

    searchInput.addEventListener('input', e => {
        const search = e.target.value.toLowerCase();
        const filtered = africanCountries.filter(c => c.name.toLowerCase().includes(search));
        isPaused = true;
        cancelAnimationFrame(animationFrameId);
        updateCarousel(filtered);
        scrollAmount = 0;
        track.style.transform = `translateX(0px)`;
        trackEvent('Carousel', 'Search', search);
    });

    track.addEventListener('click', e => {
        const item = e.target.closest('.carousel-item');
        if (item) {
            const { country, code, emoji, region } = item.dataset;
            joinCommunity(country, code, emoji, region);
        }
    });

    track.addEventListener('keydown', e => {
        if (e.key === 'Enter' || e.key === ' ') {
            const item = e.target.closest('.carousel-item');
            if (item) {
                const { country, code, emoji, region } = item.dataset;
                joinCommunity(country, code, emoji, region);
            }
        }
    });
}

function joinCommunity(countryName, countryCode, emoji, region) {
    trackEvent('Community', 'Interest', countryName);
    const modal = document.createElement('div');
    modal.className = 'modal';
    modal.style.display = 'flex';
    modal.innerHTML = `<div class="modal-content">
        <button class="close" aria-label="Close community modal">&times;</button>
        <div class="preview-content">
            <h3 class="preview-header">Welcome to c/${countryName}</h3>
            <p class="preview-text">Connect with your ${countryName} family worldwide. Share stories, opportunities, and celebrate your heritage.</p>
            <div class="preview-post">
                <div class="preview-post-header">${emoji} ${countryName} Community</div>
                <div class="preview-post-content">Just joined and already found 3 job leads in ${countryName}! Grateful for this space.</div>
                <div class="preview-post-action">👍 42 • 💬 8</div>
            </div>
            <button class="btn btn-primary">Join c/${countryName}</button>
        </div>
    </div>`;
    document.body.appendChild(modal);

    const focusableElements = modal.querySelectorAll('button, [href], input, select, textarea, [tabindex]:not([tabindex="-1"])');
    const firstElement = focusableElements[0];
    const lastElement = focusableElements[focusableElements.length - 1];
    firstElement.focus();

    modal.addEventListener('keydown', e => {
        if (e.key === 'Tab') {
            if (e.shiftKey && document.activeElement === firstElement) {
                e.preventDefault();
                lastElement.focus();
            } else if (!e.shiftKey && document.activeElement === lastElement) {
                e.preventDefault();
                firstElement.focus();
            }
        }
    });

    modal.querySelector('.close').addEventListener('click', () => {
        modal.remove();
        trackEvent('Community', 'Modal Close', countryName);
    });

    modal.querySelector('.btn-primary').addEventListener('click', () => {
        openModal('signupModal');
        modal.remove();
        trackEvent('Community', 'Join Initiate', countryName);
    });
}

// Initialize Maps
function initMaps() {
    // World Map
    const worldMap = L.map('worldMap').setView([0, 0], 2);
    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
        attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
    }).addTo(worldMap);

    // Africa Map
    const africaMap = L.map('africaMap').setView([8, 20], 4);
    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
        attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
    }).addTo(africaMap);

    // Add African countries to Africa map
    africanCountries.forEach(country => {
        L.marker([country.lat, country.lng])
            .addTo(africaMap)
            .bindPopup(`<b>c/${country.name}</b><br>${country.emoji} ${country.region}`)
            .openPopup();
    });
}

document.addEventListener('DOMContentLoaded', () => {
    initializeCarousel();
    trackPerformance();
    initMaps();

    // Modal Event Listeners
    document.querySelector('.login-btn').addEventListener('click', () => openModal('signinModal'));
    document.querySelector('.cta-nav').addEventListener('click', () => openModal('signupModal'));
    document.querySelector('.btn-primary').addEventListener('click', () => openModal('signupModal'));
    document.querySelector('.btn-secondary').addEventListener('click', () => openModal('signinModal'));

    document.getElementById('forgotPasswordLink').addEventListener('click', e => {
        e.preventDefault();
        openModal('forgotPasswordModal');
        closeModal('signinModal');
    });

    document.getElementById('signupFromSignin').addEventListener('click', e => {
        e.preventDefault();
        closeModal('signinModal');
        openModal('signupModal');
    });

    document.getElementById('signinFromSignup').addEventListener('click', e => {
        e.preventDefault();
        closeModal('signupModal');
        openModal('signinModal');
    });

    document.getElementById('backToSignin').addEventListener('click', e => {
        e.preventDefault();
        closeModal('forgotPasswordModal');
        openModal('signinModal');
    });

    document.getElementById('signinForm').addEventListener('click', signIn);
    document.getElementById('signupForm').addEventListener('click', signUp);
    document.querySelector('.social-button').addEventListener('click', signInWithGoogle);
    document.getElementById('forgotPasswordForm').addEventListener('click', resetPassword);

    document.querySelectorAll('.close').forEach(closeBtn => {
        closeBtn.addEventListener('click', e => {
            const modal = e.target.closest('.modal');
            if (modal) closeModal(modal.id);
        });
    });
});